{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAM;IAEX,aAAc;QAEZ,IAAI,CAAC,YAAY;IAEnB;IAEA;;;;;;;;;;;;GAYC,GACD,OAAO;QAEL,mEAAmE;QAEnE,IAAI,OAAO,OAAO,MAAM,aAEtB,IAAI,CAAC,YAAY,IAAI,CAAA,GAAA,aAAK,EAAE,OAAO;aAE9B,IAAI,OAAO,OAAO,UAAU,aAEjC,IAAI,CAAC,YAAY,IAAI,CAAA,GAAA,aAAK,EAAE,OAAO;QAIrC,IAAI,IAAI,CAAC,WAEP,QAAQ,IAAI,SAAS,IAAI,CAAC,WAAW;aAIrC,sDAAsD;QACtD,MAAM;IAIV;IAEA;;GAEC,GACD,MAAM,eAAe;QAEnB,MAAM;IAER;IAEA;;GAEC,GACD,MAAM,cAAc,SAAO,EAAE;QAE3B,MAAM;IAER;IAEA;;GAEC,GACD,YAAY,GAAG,EAAE;QAEf,MAAM,SAAS,OAAO,SAAS,cAAc;QAC7C,OAAO,OAAO;QACd,OAAO,MAAM;QACb,OAAO,SAAS,KAAK,YAAY;QACjC,KAAK;IAEP;IAEA;;GAEC,GACD,MAAM,eAAe,KAAG,EAAE,MAAI,EAAE;QAE9B,MAAM,IAAI;QACV,IAAI,KAAK,QAAQ;QACjB,IAAI,qBAAqB;YACvB,IAAI,IAAI,eAAe,GACrB,eAAe;YACf,OAAO,IAAI;QAEf;QAEA,IAAI,KAAK;IAEX;IAEA;;GAEC,GACD,oBAAoB;QAElB,OAAO,IAAI,CAAC,UAAU;IAExB;IAEA;;;;GAIC,GACD,eAAe,YAAU,EAAE,OAAK,EAAE,QAAM,EAAE;QAExC,4CAA4C;QAC5C,IAAI,cAAY,OAAO,SAAS,cAAc;QAC9C,YAAU,QAAQ;QAClB,YAAU,SAAS;QACnB,OAAO,SAAS,KAAK,OAAO;QAE5B,IAAI,kBAAgB,YAAU,WAAW;QAEzC,UAAU,gBAAc,gBAAgB,YAAU,OAAO,YAAU;QACnE,SAAS,QAAQ;QAEjB,IAAK,IAAI,MAAG,GAAG,MAAE,OAAO,QAAO,MAE7B,MAAM,CAAC,IAAE,GAAG,MAAM,CAAC,IAAE;QAGrB,8BAA8B;QAChC,gBAAc,aAAa,SAAS,GAAG;QACvC,gBAAc;QACd,gBAAc,MAAM,GAAG,KAAK,kBAAkB;QAC9C,gBAAc,UAAU,aAAW,GAAG,CAAC,EAAE,SAAS,gCAAgC;QAClF,gBAAc;QAEd,SAAS,YAAU,UAAU;QAC7B,SAAS,OAAO,QAAQ,0BAAyB;QACjD,YAAY,WAAW,KAAK,KAAK,SAAS,CAAC,MAAM,IAAE,WAAW;QAE9D,OAAO;IAET;AAEF;;;;;;ACnJO,MAAM;IAEX,YAAY,QAAQ,CAAE;QAEpB,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,WAAW;IAElB;AAEF;;;;;;;;;ACPO,MAAM,kDAAe,CAAA,GAAA,gBAAQ;IAElC,YAAY,QAAQ,CAAE;QAEpB,KAAK,CAAC;QACN,IAAI,CAAC,OAAO;IAEd;AAGF;;;;;;;ACTA,yDAAyD;AACzD,2DAA2D;AAC3D,OAAO,WAAW,IAAI,CAAA,GAAA,eAAO","sources":["src/boostlet.js","src/framework.js","src/framework_niivue.js","src/index.js"],"sourcesContent":["import {Framework} from './framework.js';\nimport {NiiVue} from './framework_niivue.js';\n\nexport class Boostlet {\n\n  constructor() {\n\n    this.framework = null;\n\n  }\n\n  /**\n   * Initializes the Boostlet.\n   * \n   * This includes several steps such as identifying the \n   * visualization/rendering framework that is available. \n   * \n   * TODO: Later we want to have fallbacks in place if the framework\n   * is not detected.\n   * \n   * TODO: We also want to have a force mode where the developer\n   * can specify which framework to use as a bypass of the detection.\n   * \n   */\n  init() {\n\n    // TODO: detect which framework is available and pick the first one\n\n    if (typeof window.nv != 'undefined') {\n    \n      this.framework = new NiiVue(window.nv);\n    \n    } else if (typeof window.niivue != 'undefined') {\n      \n      this.framework = new NiiVue(window.niivue);\n\n    }\n\n    if (this.framework) {\n\n      console.log('Found', this.framework, '!')\n    \n    } else {\n\n      // TODO: fallback to general canvas or webgl framework\n      throw \"Framework Not Found.\";\n\n    }\n\n  }\n\n  /**\n   * Let's the user select a region of interest box.\n   */\n  async wait_for_box() {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  /**\n   * Let's the user select (multiple) seeds.\n   */\n  async wait_for_seed(howmany) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  /**\n   * Loads an external javascript file asynchronously. \n   */\n  load_script(url) {\n\n    const script = window.document.createElement(\"script\")\n    script.type = \"text/javascript\"\n    script.src = url;\n    window.document.head.appendChild(script);\n    eval(script);\n\n  }\n\n  /**\n   * Sends a HTTP POST request to a url with some data.\n   */\n  async send_http_post(url, data) {\n\n    xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", endpoint);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        // request done\n        return xhr.response;\n      }\n    }\n\n    xhr.send(data)\n\n  }\n\n  /**\n   * Gets the current image (2D).\n   */\n  get_current_image() {\n\n    return this.framework.get_current_image();\n\n  }\n\n  /**\n   * Encode raw image data to PNG.\n   * \n   * TODO: Make flipping optional and dependent on framework.\n   */\n  convert_to_png(uint8array, width, height) {\n\n    // we are using an offscreen canvas for this\n    let offscreen = window.document.createElement('canvas');\n    offscreen.width = width;\n    offscreen.height = height;\n    window.document.body.append(offscreen);\n\n    let offscreen_ctx = offscreen.getContext('2d');\n\n    imgdata = offscreen_ctx.createImageData(offscreen.width, offscreen.height);\n    pxdata = imgdata.data;\n\n    for (var i =0; i<pxdata.length;i++) {\n        \n      pxdata[i] = pixels[i];\n\n    }\n      // update canvas with new data\n    offscreen_ctx.putImageData(imgdata, 0, 0);\n    offscreen_ctx.save();\n    offscreen_ctx.scale(1, -1); // Flip vertically\n    offscreen_ctx.drawImage(offscreen, 0, -c.height); // Draw with flipped coordinates\n    offscreen_ctx.restore();\n\n    base64 = offscreen.toDataURL('image/png')\n    base64 = base64.replace(\"data:image/png;base64,\",\"\")\n    pngpixels = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n\n    return pngpixels;\n\n  }\n\n}\n","export class Framework {\n\n  constructor(instance) {\n\n    this.name = 'generic';\n    this.instance = instance;\n\n  }\n\n}\n","import {Framework} from './framework.js';\n\nexport class NiiVue extends Framework {\n  \n  constructor(instance) {\n\n    super(instance);\n    this.name = 'niivue';\n\n  }\n\n\n}\n","\nimport {Boostlet} from \"./boostlet.js\"\n\n// register global namespace with a new boostlet instance\n// later we might want to support multiple active boostlets\nwindow.Boostlet = new Boostlet();\n"],"names":[],"version":3,"file":"boostlet.min.js.map"}