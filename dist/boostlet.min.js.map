{"mappings":"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","sources":["src/util.js","src/framework.js","src/frameworks/cornerstone2d.js","src/frameworks/niivue.js","src/index.js","src/boostlet.js"],"sourcesContent":["import {Framework} from './framework.js';\nimport {Cornerstone2D} from './frameworks/cornerstone2d.js';\nimport {NiiVue} from './frameworks/niivue.js';\n\nexport class Util {\n  \n  static detect_framework() {\n\n    let framework = null;\n\n    if (typeof window.nv != 'undefined') {\n    \n      framework = new NiiVue(window.nv);\n    \n    } else if (typeof window.niivue != 'undefined') {\n      \n      framework = new NiiVue(window.niivue);\n\n    } else if (typeof window.cornerstone != 'undefined') {\n\n      framework = new Cornerstone2D(window.cornerstone);\n\n    }\n\n    // TODO: fallback to general canvas or webgl framework\n\n    return framework;\n\n  }\n\n  static async load_script(url) {\n\n    const script = window.document.createElement(\"script\")\n    script.type = \"text/javascript\"\n    script.src = url;\n    window.document.head.appendChild(script);\n    eval(script);\n\n  }\n\n  static async send_http_post(url, data, callback) {\n\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        // request done\n        callback( xhr.response );\n\n        return;\n\n      }\n    }\n\n    xhr.send(data)\n\n  }\n\n  static convert_to_png(uint8array, width, height, flip) {\n\n    // we are using an offscreen canvas for this\n    let offscreen = window.document.createElement('canvas');\n    offscreen.width = width;\n    offscreen.height = height;\n    window.document.body.append(offscreen);\n\n    let offscreen_ctx = offscreen.getContext('2d');\n\n    let imgdata = offscreen_ctx.createImageData(offscreen.width, offscreen.height);\n    let pxdata = imgdata.data;\n\n    for (var i =0; i<pxdata.length;i++) {\n        \n      pxdata[i] = uint8array[i];\n\n    }\n      // update canvas with new data\n    offscreen_ctx.putImageData(imgdata, 0, 0);\n    offscreen_ctx.save();\n\n    if (typeof flip != 'undefined') {\n      offscreen_ctx.scale(1, -1); // Flip vertically\n    }\n    \n    let c_height = height;\n\n    if (typeof flip != 'undefined') {\n      c_height = -height;\n    }\n\n    offscreen_ctx.drawImage(offscreen, 0, c_height); \n    offscreen_ctx.restore();\n\n    let base64 = offscreen.toDataURL('image/png')\n    base64 = base64.replace(\"data:image/png;base64,\",\"\")\n    let pngpixels = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\n\n    return pngpixels;\n\n  }\n\n}","import {Util} from './util.js';\n\nexport class Framework {\n\n  constructor(instance) {\n\n    this.name = 'generic';\n    this.instance = instance;\n\n    this.flip_on_png = false;\n\n  }\n\n  get_current_image() {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  select_box(callback) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  convert_to_png(uint8array, width, height) {\n\n    return Util.convert_to_png(uint8array, width, height, this.flip_on_png);\n\n  }\n\n}\n","import {Framework} from '../framework.js';\n\nexport class Cornerstone2D extends Framework {\n  \n  constructor(instance) {\n\n    super(instance);\n    this.name = 'cornerstone2D';\n\n    this.cornerstonetools_instance = null;\n\n    if (typeof window.cornerstoneTools != 'undefined') {\n\n      // TODO probably not too robust\n      this.cornerstonetools_instance = window.cornerstoneTools;\n\n    }\n\n    this.flip_on_png = false;\n\n  }\n\n  get_current_image() {\n\n    // TODO this is hacky going through the canvas\n    // later should grab the real volume data\n\n    let element = this.instance.getEnabledElements()[0];\n    let canvas = element.canvas;\n    let height = canvas.height;\n    let width = canvas.width;\n\n    let  ctx = canvas.getContext('2d');\n\n    let pixels = ctx.getImageData(0, 0, width, height);\n\n    return pixels;\n\n  }\n\n  select_box(callback) {\n\n    this.cornerstonetools_instance.setToolActive('RectangleRoi', { mouseButtonMask: 1 })\n\n    let element = this.instance.getEnabledElements()[0];\n    let canvas = element.canvas;\n\n    canvas.onmouseup = function() {\n\n      let state = this.cornerstonetools_instance.globalImageIdSpecificToolStateManager.saveToolState();\n\n      let topleft = state[Object.keys(state).pop()].RectangleRoi.data[0].handles.start;\n      let bottomright = state[Object.keys(state).pop()].RectangleRoi.data[0].handles.end;\n\n      let topleft_c = this.instance.pixelToCanvas(element.element, topleft);\n      let bottomright_c = this.instance.pixelToCanvas(element.element, bottomright);\n\n      this.cornerstonetools_instance.clearToolState(element.element, 'RectangleRoi');\n      this.instance.renderGrayscaleImage(element, true);\n\n      callback(topleft_c, bottomright_c);\n\n    }.bind(this);\n\n  }\n\n}\n","import {Framework} from '../framework.js';\n\nexport class NiiVue extends Framework {\n  \n  constructor(instance) {\n\n    super(instance);\n    this.name = 'niivue';\n\n    this.flip_on_png = true;\n\n  }\n\n\n}\n","\nimport {Boostlet} from \"./boostlet.js\"\n\n// register global namespace with a new boostlet instance\n// later we might want to support multiple active boostlets\nwindow.Boostlet = new Boostlet();\n","import {Util} from './util.js';\n\nimport {Framework} from './framework.js';\n\nexport class Boostlet {\n\n  constructor() {\n\n    this.framework = null;\n\n  }\n\n  /**\n   * Initializes the Boostlet.\n   * \n   * This includes several steps such as identifying the \n   * visualization/rendering framework that is available. \n   * \n   * TODO: Later we want to have fallbacks in place if the framework\n   * is not detected.\n   * \n   */\n  init(name, instance) {\n\n    if (typeof name != 'undefined' && typeof instance != 'undefined') {\n\n      console.log('Framework forced by user!');\n      throw \"Forced Framework Not Implemented.\";\n      // TODO\n\n    } else {\n\n      this.framework = Util.detect_framework();\n\n    }\n\n    if (this.framework) {\n\n      console.log('Found', this.framework, '!')\n    \n    } else {\n\n      throw \"Framework Not Found.\";\n\n    }\n\n  }\n\n  /**\n   * Let's the user select a region of interest box.\n   */\n  async select_box(callback) {\n\n    this.framework.select_box(callback);\n\n  }\n\n  /**\n   * Let's the user select (multiple) seeds.\n   */\n  async select_seed(howmany) {\n\n    throw \"Missing Implementation.\";\n\n  }\n\n  /**\n   * Loads an external javascript file asynchronously. \n   */\n  async load_script(url) {\n\n    Util.load_script(url);\n\n  }\n\n  /**\n   * Sends a HTTP POST request to a url with some data.\n   */\n  async send_http_post(url, data, callback) {\n\n    Util.send_http_post(url, data, callback);\n\n  }\n\n  /**\n   * Gets the current image (2D).\n   * \n   * TODO: Optional bounding box should be supported.\n   * \n   */\n  get_current_image() {\n\n    return this.framework.get_current_image();\n\n  }\n\n  /**\n   * Encode raw image data to PNG.\n   */\n  convert_to_png(uint8array, width, height) {\n\n    return this.framework.convert_to_png(uint8array, width, height);\n\n  }\n\n}\n"],"names":[],"version":3,"file":"boostlet.min.js.map"}